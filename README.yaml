---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-ecs-web-app

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-ecs-web-app

# Badges to display
badges:
  - name: "Codefresh Build Status"
    image: "https://g.codefresh.io/api/badges/pipeline/cloudposse/terraform-modules%2Fterraform-aws-ecs-web-app?type=cf-1"
    url: "https://g.codefresh.io/public/accounts/cloudposse/pipelines/5dbb22a15c2e97b3b73ab484"
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-ecs-web-app.svg"
    url: "https://github.com/cloudposse/terraform-aws-ecs-web-app/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related:
  - name: "terraform-aws-alb"
    description: "Terraform module to provision a standard ALB for HTTP/HTTP traffic"
    url: "https://github.com/cloudposse/terraform-aws-alb"
  - name: "terraform-aws-alb-ingress"
    description: "Terraform module to provision an HTTP style ingress rule based on hostname and path for an ALB"
    url: "https://github.com/cloudposse/terraform-aws-alb-ingress"
  - name: "terraform-aws-codebuild"
    description: "Terraform Module to easily leverage AWS CodeBuild for Continuous Integration"
    url: "https://github.com/cloudposse/terraform-aws-codebuild"
  - name: "terraform-aws-ecr"
    description: "Terraform Module to manage Docker Container Registries on AWS ECR"
    url: "https://github.com/cloudposse/terraform-aws-ecr"
  - name: "terraform-aws-ecs-alb-service-task"
    description: "Terraform module which implements an ECS service which exposes a web service via ALB."
    url: "https://github.com/cloudposse/terraform-aws-ecs-alb-service-task"
  - name: "terraform-aws-ecs-codepipeline"
    description: "Terraform Module for CI/CD with AWS Code Pipeline and Code Build for ECS"
    url: "https://github.com/cloudposse/terraform-aws-ecs-codepipeline"
  - name: "terraform-aws-ecs-container-definition"
    description: "Terraform module to generate well-formed JSON documents that are passed to the aws_ecs_task_definition Terraform resource"
    url: "https://github.com/cloudposse/terraform-aws-ecs-container-definition"
  - name: "terraform-aws-lb-s3-bucket"
    description: "Terraform module to provision an S3 bucket with built in IAM policy to allow AWS Load Balancers to ship access logs."
    url: "https://github.com/cloudposse/terraform-aws-lb-s3-bucket"
  - name: "terraform-aws-eks-cluster"
    description: "Terraform module for provisioning an EKS cluster"
    url: "https://github.com/cloudposse/terraform-aws-eks-cluster"
  - name: "terraform-aws-eks-workers"
    description: "Terraform module to provision an AWS AutoScaling Group, IAM Role, and Security Group for EKS Workers"
    url: "https://github.com/cloudposse/terraform-aws-eks-workers"
  - name: "terraform-aws-ec2-autoscale-group"
    description: "Terraform module to provision Auto Scaling Group and Launch Template on AWS"
    url: "https://github.com/cloudposse/terraform-aws-ec2-autoscale-group"


# Short description of this project
description: |-
  A Terraform module which implements a web app on ECS and supporting AWS resources.

# How to use this project
usage: |-
  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest) (which test and deploy the example on AWS), see [test](test).

  Other examples:

  - [without authentication](examples/without_authentication) - without authentication
  - [with Google OIDC authentication](examples/with_google_oidc_authentication) - with Google OIDC authentication
  - [with Cognito authentication](examples/with_cognito_authentication) - with Cognito authentication

  ```
  module "default_backend_web_app" {
    source                                          = "git::https://github.com/cloudposse/terraform-aws-ecs-web-app.git?ref=master"
    namespace                                       = "eg"
    stage                                           = "testing"
    name                                            = "appname"
    vpc_id                                          = module.vpc.vpc_id
    alb_ingress_unauthenticated_listener_arns       = module.alb.listener_arns
    alb_ingress_unauthenticated_listener_arns_count = 1
    aws_logs_region                                 = "us-east-2"
    ecs_cluster_arn                                 = aws_ecs_cluster.default.arn
    ecs_cluster_name                                = aws_ecs_cluster.default.name
    ecs_security_group_ids                          = [module.vpc.vpc_default_security_group_id]
    ecs_private_subnet_ids                          = module.subnets.private_subnet_ids
    alb_ingress_healthcheck_path                    = "/healthz"
    alb_ingress_unauthenticated_paths               = ["/*"]
    codepipeline_enabled                            = false

    environment = [
      {
        name = "COOKIE"
        value = "cookiemonster"
      },
      {
        name = "PORT"
        value = "80"
      }
    ]
  }
  ```

# Example usage
#examples: |-
#  Example goes here...

# How to get started quickly
#quickstart: |-
#  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Erik Osterman"
    github: "osterman"
  - name: "Igor Rodionov"
    github: "goruha"
  - name: "Andriy Knysh"
    github: "aknysh"
  - name: "Sarkis Varozian"
    github: "sarkis"
